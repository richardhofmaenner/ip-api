name: Docker

on:
  workflow_dispatch:
  release:
    types: [released]

env:
  IMAGE_NAME: ip-api

jobs:      
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi
          
  push:

    needs: [test]

    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 15
          
      - name: Install Dependencies
        run: yarn install
        
      - name: Build Application
        run: yarn build

      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into Docker Hub Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push image to Docker Hub Registry
        run: |
          IMAGE_ID=richardhofmaenner/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:latest
          
      - name: Log out of Docker Hub
        run: docker logout
          
